{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorial-list.component.js","App.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","process","headers","Content-type","tutorial_service","http","get","id","concat","data","post","put","delete","title","AddTutorial","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeTitle","e","setState","target","value","onChangeUrl","url","onChangeGithub","github","saveTutorial","state","TutorialDataService","then","response","published","submitted","console","log","catch","newTutorial","react_default","a","createElement","className","onClick","htmlFor","type","required","onChange","name","Component","Tutorial","onChangeDescription","propertyToSet","description","prevState","currentTutorial","objectSpread","defineProperty","getTutorial","updatePublished","status","update","updateTutorial","message","deleteTutorial","navigate","params","_this2","readOnly","class","TutorialsList","onChangeSearchTitle","searchTitle","retrieveTutorials","getAll","tutorials","refreshList","currentIndex","setActiveTutorial","tutorial","index","removeAllTutorials","deleteAll","findByTitle","_this$state","placeholder","defaultValue","map","key","react_router_dom","to","style","textDecoration","App","Wrapper","useParams","useNavigate","tutorial_component_Tutorial","assign","react_router","path","element","tutorial_list_component_TutorialsList","add_tutorial_component_AddTutorial","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App_0"],"mappings":"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","file":"static/js/main.a282b720.chunk.js","sourcesContent":["import axios from \"axios\";\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass TutorialDataService {\n    getAll() {\n        return http.get(\"/tutorials\");\n    }\n\n    get(id) {\n        return http.get(`/tutorials/${id}`);\n    }\n\n    create(data) {\n        return http.post(\"/tutorials\", data);\n    }\n\n    update(id, data) {\n        return http.put(`/tutorials/${id}`, data);\n    }\n\n    delete(id) {\n        return http.delete(`/tutorials/${id}`);\n    }\n\n    deleteAll() {\n        return http.delete(`/tutorials`);\n    }\n\n    findByTitle(title) {\n        return http.get(`/tutorials?title=${title}`);\n    }\n}\n\nexport default new TutorialDataService();","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nexport default class AddTutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      title: \"\",\n      url: \"\",\n      github: \"\",\n      published: false,\n      submitted: false\n    };\n  }\n  onChangeTitle = (e) => {\n    this.setState({\n      title: e.target.value\n    });\n  }\n  onChangeUrl = (e) => {\n    this.setState({\n      url: e.target.value\n    });\n  }\n  onChangeGithub = (e) => {\n    this.setState({\n      github: e.target.value\n    });\n  }\n  saveTutorial = () => {\n    var data = {\n      title: this.state.title,\n      url: this.state.url,\n      github: this.state.github\n    };\n    TutorialDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          url: response.data.url,\n          github: response.data.github,\n          published: response.data.published,\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newTutorial = () => {\n    this.setState({\n      id: null,\n      title: \"\",\n      url: \"\",\n      github: \"\",\n      published: false,\n      submitted: false\n    });\n  }\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <h4>You submitted successfully!</h4>\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-2 col-form-label\" htmlFor=\"title\">Title</label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  required\n                  value={this.state.title}\n                  onChange={this.onChangeTitle}\n                  name=\"title\"\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-2 col-form-label\" htmlFor=\"url\">URL</label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"url\"\n                  required\n                  value={this.state.url}\n                  onChange={this.onChangeUrl}\n                  name=\"url\"\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-2 col-form-label\" htmlFor=\"github\">GitHub</label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"github\"\n                  required\n                  value={this.state.github}\n                  onChange={this.onChangeGithub}\n                  name=\"github\"\n                />\n              </div>\n            </div>\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        url: \"\",\n        github: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.params.id);\n  }\n\n  onChangeTitle = (e) => {\n    this.onChangeDescription(e, \"title\");\n  }\n\n  onChangeUrl = (e) => {\n    this.onChangeDescription(e, \"url\");\n  }\n\n  onChangeGithub = (e) => {\n    this.onChangeDescription(e, \"github\");\n  }\n\n  onChangeDescription = (e, propertyToSet) => {\n\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentTutorial: {\n        ...prevState.currentTutorial,\n        [propertyToSet]: description\n      }\n    }));\n  }\n  getTutorial = (id) => {\n    TutorialDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentTutorial: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  updatePublished = (status) => {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      url: this.state.currentTutorial.url,\n      github: this.state.currentTutorial.github,\n      published: status\n    };\n    TutorialDataService.update(this.state.currentTutorial.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentTutorial: {\n            ...prevState.currentTutorial,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  updateTutorial = () => {\n    TutorialDataService.update(\n      this.state.currentTutorial.id,\n      this.state.currentTutorial\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The tutorial was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  deleteTutorial = () => {\n    TutorialDataService.delete(this.state.currentTutorial.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.navigate('/tutorials')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  render() {\n    const { currentTutorial } = this.state;\n    return (\n      <div>\n        {currentTutorial ? (\n          <div className=\"edit-form\">\n            <h4>Tutorial</h4>\n            <form>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-2 col-form-label\" htmlFor=\"title\">Title</label>\n                <div className=\"col-sm-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"title\"\n                    value={currentTutorial.title}\n                    onChange={this.onChangeTitle}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-2 col-form-label\" htmlFor=\"url\">URL</label>\n                <div className=\"col-sm-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"url\"\n                    value={currentTutorial.url}\n                    onChange={this.onChangeUrl}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-2 col-form-label\" htmlFor=\"github\">GitHub</label>\n                <div className=\"col-sm-10\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"github\"\n                    value={currentTutorial.github}\n                    onChange={this.onChangeGithub}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-2 col-form-label\">\n                  <strong>Status:</strong>\n                </label>\n                <div className=\"col-sm-10\">\n                <input type=\"text\" readOnly class=\"form-control-plaintext\" value={currentTutorial.published ? \"Published\" : \"Pending\"}/>\n                </div>\n              </div>\n            </form>\n            {currentTutorial.published ? (\n              <button\n                className=\"badge bg-primary me-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"badge bg-primary me-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n            <button\n              className=\"badge bg-danger me-2\"\n              onClick={this.deleteTutorial}\n            >\n              Delete\n            </button>\n            <button\n              type=\"submit\"\n              className=\"badge bg-success\"\n              onClick={this.updateTutorial}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a Tutorial...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nimport { Link } from \"react-router-dom\";\nexport default class TutorialsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      searchTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveTutorials();\n  }\n\n  onChangeSearchTitle = (e) => {\n    const searchTitle = e.target.value;\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  retrieveTutorials = () => {\n    TutorialDataService.getAll()\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList = () => {\n    this.retrieveTutorials();\n    this.setState({\n      currentTutorial: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveTutorial = (tutorial, index) => {\n    this.setState({\n      currentTutorial: tutorial,\n      currentIndex: index\n    });\n  }\n\n  removeAllTutorials = () => {\n    TutorialDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchTitle = () => {\n    TutorialDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          tutorials: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              defaultValue={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={this.searchTitle}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>Tutorials List</h4>\n          <ul className=\"list-group\">\n            {tutorials &&\n              tutorials.map((tutorial, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\n                  key={index}\n                >\n                  {tutorial.title}\n                </li>\n              ))}\n          </ul>\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllTutorials}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentTutorial ? (\n            <div>\n              <h4>Tutorial</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentTutorial.title}\n              </div>\n              <div>\n                <label>\n                  <strong>URL:</strong>\n                </label>{\" \"}\n                {currentTutorial.url}\n              </div>\n              <div>\n                <label>\n                  <strong>GitHub:</strong>\n                </label>{\" \"}\n                {currentTutorial.github}\n              </div>\n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\n              </div>\n              <Link\n                to={\"/react-crud/tutorials/\" + currentTutorial.id}\n                style={{ textDecoration: 'none' }}\n                className=\"badge bg-warning text-dark\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a Tutorial...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component} from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Routes , Link , Route , useParams, useNavigate} from \"react-router-dom\";\nimport \"./App.css\";\nimport AddTutorial from \"./components/add-tutorial.component.js\";\nimport Tutorial from \"./components/tutorial.component.js\";\nimport TutorialsList from \"./components/tutorial-list.component.js\";\n\nclass App extends Component{\n  render() {\n    const Wrapper = (props) => {\n      const params  = useParams();\n      const navigate = useNavigate();\n      return <Tutorial {...props} params={params} navigate={navigate} />\n    }\n    return (\n      <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <Link to={\"/react-crud/tutorials\"} className=\"navbar-brand\">\n          Mimi's Tutorials\n        </Link>\n        <div className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to={\"/react-crud/tutorials\"} className=\"nav-link\">\n              Tutorials\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={\"/react-crud/add\"} className=\"nav-link\">\n              Add\n            </Link>\n          </li>\n        </div>\n      </nav>\n      <div className=\"container mt-3\">\n        <Routes>\n          <Route path=\"/react-crud\" element={<TutorialsList />} />\n          <Route path=\"/react-crud/add\" element={<AddTutorial />} />\n          <Route path=\"/react-crud/tutorials\" element={<TutorialsList />} />\n          <Route path=\"/react-crud/tutorials/:id\" element={<Wrapper />} />\n        </Routes>\n      </div>\n    </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}